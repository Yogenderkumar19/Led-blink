#include <LiquidCrystal_I2C.h>

#define LDR_PIN 2

// LDR Characteristics
const float GAMMA = 0.7;
const float RL10 = 50;

LiquidCrystal_I2C lcd(0x27, 20, 4);

void setup() {
  pinMode(LDR_PIN, INPUT);

  lcd.init();
  lcd.backlight();
}

void loop() {
  int analogValue = analogRead(A0);
  float voltage = analogValue / 1024. * 5;
  float resistance = 2000 * voltage / (1 - voltage / 5);
  float lux = pow(RL10 * 1e3 * pow(10, GAMMA) / resistance, (1 / GAMMA));

  lcd.setCursor(2, 0);
  lcd.print("Room: ");
  if (lux > 50) {
    lcd.print("Light!");
  } else {
    lcd.print("Dark  ");
  }

  lcd.setCursor(0, 1);
  lcd.print("Lux: ");
  lcd.print(lux);
  lcd.print("          ");

  delay(100);
}

/* LDR A0 = A0;
VCC = 5V;
GND = GND
*/

/* LCD SCL = A5; lcd1602 
LCD SDA = A4;
LCD GND = GND;
LCD VCC = 5V;
*/

â™¦ // ldr sensor other method 

//pembuat program: ........
int ldrPin = A0;     // LDR pin
int ldrVal = 0;      // Value of LDR
int ledPin = 2;     // Build in LED pin
// LDR Characteristics
const float GAMMA = 0.7;
const float RL10 = 50;
void setup() {
  Serial.begin(9600);  // Initialise the serial monitor
   pinMode(2, OUTPUT);
}
void loop() {
  ldrVal = analogRead(ldrPin); // Read the analog value of the LDR
   float voltage = ldrVal / 1024. * 5;
  float resistance = 2000 * voltage / (1 - voltage / 5);
  float lux = pow(RL10 * 1e3 * pow(10, GAMMA) / resistance, (1 / GAMMA));

 if (lux < 200) {             // If the LDR value is lower than 200
    digitalWrite(ledPin, HIGH);   // Turn buildin LED on
  } else {
    digitalWrite(ledPin, LOW);    // Turn buildin LED off
  }
  Serial.println(lux);      // Show the value in the serial monitor
  delay(1000);                 // Pause 1000ms
}
/* LDR A0 = A0;
VCC = 5V;
GND = GND 
led Pin 2, GND  */
